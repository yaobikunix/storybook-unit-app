name: CI # このワークフローの名前（GitHub ActionsのUIで表示される）

on:
  push: # mainやdevelopにpushされたときに実行
    branches:
      - main
      - develop
  pull_request: # mainやdevelopに向けてPRが作成・更新されたときに実行
    branches:
      - main
      - develop

jobs:
  lint-check: # コードのLintチェックを実行する
    name: Lint Check # ジョブ名
    runs-on: ubuntu-latest # Ubuntuの仮想環境にて実行する
    permissions:
      contents: read # リポジトリの内容を読み取る権限
      pull-requests: write # PRにコメントを書き込む権限（Lint結果を表示するためのもの）
    steps:
      - name: Checkout repository # GitHubリポジトリのコードを取得（Actions環境にコピーする）
        uses: actions/checkout@v4

      - name: Set up Node.js # Node.js 20をセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: 20 # 使用するNode.jsのバージョン（20系）
          cache: 'npm' # `npm ci`の実行時にキャッシュを利用して高速化

      - name: Install dependencies # 依存関係をインストール（package-lock.json に基づく）
        working-directory: storybook-unit-app # `storybook-unit-app`ディレクトリ内で実行
        run: npm ci

      - name: Run ESLint # ESLintを実行してコードの静的解析を行う
        uses: reviewdog/action-eslint@v1 # reviewdog（GitHub Actionsのツール）を使ってESLintを実行
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # GitHubの認証トークン（PRに結果をコメントするため）
          reporter: github-pr-check # PRのチェックとして結果を表示
          workdir: './storybook-unit-app' # `storybook-unit-app`ディレクトリで実行

      - name: Run TypeScript Check # TypeScriptの型チェックを実行
        uses: EPMatt/reviewdog-action-tsc@v1 # reviewdogでTypeScriptの型チェックを実行
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check # PRのチェックとして結果を表示
          level: error # エラーとして検出
          workdir: './storybook-unit-app' # `storybook-unit-app`ディレクトリで実行

  build-check: # プロジェクトのビルドが正常に完了するかをチェックする
    name: Build Check # ジョブ名
    runs-on: ubuntu-latest # Ubuntu最新版の仮想環境で実行
    steps:
      - name: Checkout repository # GitHubリポジトリコードを取得
        uses: actions/checkout@v4

      - name: Set up Node.js # Node.js20をセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies # 依存関係をインストール
        working-directory: storybook-unit-app
        run: npm ci

      - name: Build project # プロジェクトをビルドして、エラーがないかをチェック
        working-directory: storybook-unit-app
        run: npm run build

